@startuml

skinparam classAttributeIconSize 0
left to right direction
hide empty members
skinparam packageStyle rectangle

package "Models" {
  class Clients {
    + Clients(string rootPath, bool isDebug = false)
    + List<Client> GetClients()
    + Client GetClient(int clientId)
    + List<Client> SearchClients(int? id, string name, string address, string city, string zipCode, string province, string country, string contactName, string contactPhone, string contactEmail)
    + bool AddClient(Client client)
    + bool UpdateClient(int clientId, Client client)
    + bool RemoveClient(int clientId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Client> data
  }

  class Orders {
    + Orders(string rootPath, bool isDebug = false)
    + List<Order> GetOrders()
    + Order GetOrder(int orderId)
    + List<OrderItem> GetItemsInOrder(int orderId)
    + List<Order> GetOrdersInShipment(int shipmentId)
    + List<Order> GetOrdersForClient(int clientId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Order> data
  }

  class Inventories {
    + Inventories(string rootPath, bool isDebug = false)
    + List<Inventory> GetInventories()
    + Inventory GetInventory(int inventoryId)
    + bool AddInventory(Inventory inventory)
    + bool UpdateInventory(int inventoryId, Inventory inventory)
    + bool RemoveInventory(int inventoryId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Inventory> data
  }

  class Transfers {
    + Transfers(string rootPath, bool isDebug = false)
    + List<Transfer> GetTransfers()
    + Transfer GetTransfer(int transferId)
    + List<TransferItem> GetItemsInTransfer(int transferId)
    + bool AddTransfer(Transfer transfer)
    + bool UpdateTransfer(int transferId, Transfer transfer)
    + bool RemoveTransfer(int transferId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Transfer> data
  }

  class Items {
    + Items(string rootPath, bool isDebug = false)
    + List<Item> GetItems()
    + Item GetItem(string itemId)
    + List<Item> GetItemsForItemLine(int itemLineId)
    + List<Item> GetItemsForItemGroup(int itemGroupId)
    + List<Item> GetItemsForItemType(int itemTypeId)
    + List<Item> GetItemsForSupplier(int supplierId)
    + bool AddItem(Item item)
    + bool UpdateItem(string itemId, Item item)
    + bool RemoveItem(string itemId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Item> data
  }

  class Shipments {
    + Shipments(string rootPath, bool isDebug = false)
    + List<Shipment> GetShipments()
    + Shipment GetShipment(int shipmentId)
    + List<ShipmentItem> GetItemsInShipment(int shipmentId)
    + bool AddShipment(Shipment shipment)
    + bool UpdateShipment(int shipmentId, Shipment shipment)
    + bool RemoveShipment(int shipmentId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Shipment> data
  }

  class Suppliers {
    + Suppliers(string rootPath, bool isDebug = false)
    + List<Supplier> GetSuppliers()
    + Supplier GetSupplier(int supplierId)
    + List<Supplier> SearchSuppliers(int? id, string name, string city, string country, string code, string reference)
    + bool AddSupplier(Supplier supplier)
    + bool UpdateSupplier(int supplierId, Supplier supplier)
    + bool RemoveSupplier(int supplierId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Supplier> data
  }

  class Locations {
    + Locations(string rootPath, bool isDebug = false)
    + List<Location> GetLocations()
    + Location GetLocation(int locationId)
    + List<Location> GetLocationsInWarehouse(int warehouseId)
    + List<Location> SearchLocations(int? id, string name, string created_At, string updated_At, int? warehouseId, string code)
    + bool AddLocation(Location location)
    + bool UpdateLocation(int locationId, Location location)
    + bool RemoveLocation(int locationId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Location> data
  }

  class ItemLines {
    + ItemLines(string rootPath, bool isDebug = false)
    + List<ItemLine> GetItemLines()
    + ItemLine GetItemLine(int itemlineId)
    + bool AddItemline(ItemLine itemline)
    + bool UpdateItemline(int itemlineId, ItemLine itemline)
    + bool RemoveItemline(int itemlineId)
    + void Save()
    - void Load(bool isDebug)
    - string _dataPath
    - List<ItemLine> _data
  }

  class ItemGroups {
    + ItemGroups(string rootPath, bool isDebug = false)
    + List<ItemGroup> GetItemGroups()
    + ItemGroup GetItemGroup(int itemGroupId)
    + bool AddItemGroup(ItemGroup itemGroup)
    + bool UpdateItemGroup(int itemGroupId, ItemGroup itemGroup)
    + bool RemoveItemGroup(int itemGroupId)
    + void Save()
    - void Load(bool isDebug)
    - string _dataPath
    - List<ItemGroup> _data
  }

  class ItemTypes {
    + ItemTypes(string rootPath, bool isDebug = false)
    + List<ItemType> GetItemTypes()
    + ItemType GetItemType(int itemtypeId)
    + bool AddItemtype(ItemType itemtype)
    + bool UpdateItemtype(int itemtypeId, ItemType itemtype)
    + bool RemoveItemtype(int itemtypeId)
    + void Save()
    - void Load(bool isDebug)
    - string _dataPath
    - List<ItemType> _data
  }

  class Warehouses {
    + Warehouses(string rootPath, bool isDebug = false)
    + List<Warehouse> GetWarehouses()
    + Warehouse GetWarehouse(int warehouseId)
    + List<Warehouse> SearchWarehouses(int? id, string code, string name, string address, string zip, string city, string province, string country, string createdAt, string updatedAt)
    + bool AddWarehouse(Warehouse warehouse)
    + bool UpdateWarehouse(int warehouseId, Warehouse warehouse)
    + bool RemoveWarehouse(int warehouseId)
    + void Save()
    - void Load(bool isDebug)
    - string dataPath
    - List<Warehouse> data
  }
}

Clients "1" *-- "*" Client
Orders "1" *-- "*" Order
Inventories "1" *-- "*" Inventory
Transfers "1" *-- "*" Transfer
Items "1" *-- "*" Item
Shipments "1" *-- "*" Shipment
Suppliers "1" *-- "*" Supplier
Locations "1" *-- "*" Location
ItemLines "1" *-- "*" ItemLine
ItemGroups "1" *-- "*" ItemGroup
ItemTypes "1" *-- "*" ItemType
Warehouses "1" *-- "*" Warehouse

@enduml