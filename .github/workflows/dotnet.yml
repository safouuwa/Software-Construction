name: .NET

on:
  push:
    branches: [ "Development" ]
  pull_request:
    branches: [ "Development" ]  

env:
  IMAGE_NAME: CargoHub
  OWNER: "${{ github.repository_owner }}"
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Add packages
      run: |
        dotnet add package Newtonsoft.Json
        dotnet add package xunit
    - name: Build
      run: dotnet build --no-restore
    
  test:
    needs: build
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest httpx
    - name: Start API server and run tests
      run: |
        dotnet run --project C#api &
        
        for i in {1..30}; do
          if curl -sSf http://localhost:3000/api/v1/warehouses > /dev/null 2>&1; then
            echo "API is up and running"
            break
          fi
          echo "Waiting for API to start..."
          sleep 5
        done
        
        if [ $i -eq 30 ]; then
          echo "API failed to start within 150 seconds"
          exit 1
        fi
        
        pytest
        
        pkill -f "dotnet run --project C#api"